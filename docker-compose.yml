version: "3.9"
name: "GLKJDevHome"
services:
  mysql8:
    image: mysql:${MYSQL_VERSION}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - 33060:3306  
    volumes:
      - my8Data:/var/lib/mysql  
      - ./conf/my8.cnf:/etc/my.cnf
    networks:
      - devNet  
  mysql5:
     image: mysql:${MYSQL_VERSION_OLD}
     restart: always
     environment:
       MYSQL_ROOT_PASSWORD: 123456 
     ports:
      - 33061:3306 
     volumes:
      - my5Data:/var/lib/mysql 
      - ./conf/my5.cnf:/etc/my.cnf    
     networks:
      - devNet  
  mongo:
    image: mongo:${MONGO_VERSION}
    restart: always
    volumes:
      - mongoData:/data/db
      - ./conf/mongod.conf:/data/configdb/mongod.conf
    ports:
      - 27017:27017
    command: 
      mongod --config /data/configdb/mongod.conf  
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456   
    networks:
      - devNet   
  mongo-express:
    image: mongo-express:${MONGO_EXPRESS_VERSION}
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
      ME_CONFIG_MONGODB_URL: mongodb://root:123456@mongo:27017/  
    networks:
      - devNet   
  redis:
    image: redis:${REDIS_VERSION}   
    restart: always 
    ports:
      - 6379:6379
    command:
      /bin/bash -c "redis-server /etc/redis.conf"  
    networks:
      - devNet  
    volumes:
      - redisData:/data   
      - ./conf/redis.conf:/etc/redis.conf  
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}     
    restart: always 
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      -  rabbitmqData:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: root  
      RABBITMQ_DEFAULT_PASS: 123456
  postgres:
    image: postgres:${POSTGRES_VERSION}
    restart: always
    networks:
        - devNet
    environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: 123456
    ports:
      - 5432:5432
    command:
      postgres -c config_file=/var/lib/postgresql/data/postgresql.conf  
    volumes:
      - postgresData:/var/lib/postgresql/data   
      - ./conf/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      - ./conf/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
  mssql:
    image: mcr.microsoft.com/mssql/server:${MSSQL_VERSION}   
    restart: always
    networks:
        - devNet
    environment:
        ACCEPT_EULA: Y
        MSSQL_SA_PASSWORD: Glkj2022!@#
    ports:
      - 1401:1433
    volumes:
      - mssqlData:/var/opt/mssql
  php-fpm5:
    # image: php:${PHPFPM5_VERSION}  
    image: phpfpm5
    restart: always
    networks: 
      - devNet
    ports:
      - 9005:9000  
  php-cli5:
    image: phpcli5
    restart: always
    networks: 
      - devNet
    stdin_open: true # -i interactive
    tty: true # -t tty
    privileged: true
    entrypoint: ["sh"] # 执行 sh
    volumes:
      - appData:/data   
      # - ./cron/phpcli5:/etc/crontab        
  php-fpm7:
    image: php:${PHPFPM7_VERSION}  
    restart: always
    networks: 
      - devNet
    ports:
      - 9007:9000
  php-cli7:
    image: php:${PHPCLI7_VERSION}
    restart: always
    networks: 
      - devNet
    stdin_open: true # -i interactive
    tty: true # -t tty
    privileged: true
    entrypoint: ["sh"] # 执行 sh
    volumes:
      - appData:/data   
      # - ./cron/phpcli7:/etc/crontab  
  php-fpm8:
    image: php:${PHPFPM8_VERSION}  
    restart: always
    networks: 
      - devNet
    ports:
      - 9008:9000    
networks:
  devNet:
    driver: bridge  
volumes:
  my8Data:
  my5Data:
  mongoData:
  rabbitmqData:
  postgresData:
  redisData:
  mssqlData:
  appData:
